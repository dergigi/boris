import { NostrEvent } from "nostr-tools";
import { AddressPointer, EventPointer, ProfilePointer } from "nostr-tools/nip19";
import { DecodeResult } from "./pointers.js";
export type HandlerLinkPlatform = "web" | "ios" | "android";
export type HandlerLinkType = DecodeResult["type"];
/** Returns an array of supported kinds for a given handler */
export declare function getHandlerSupportedKinds(handler: NostrEvent): number[];
/** Returns the name of the handler */
export declare function getHandlerName(handler: NostrEvent): string;
/** Returns the picture of the handler */
export declare function getHandlerPicture(handler: NostrEvent, fallback?: string): string | undefined;
/** Returns the description of the handler */
export declare function getHandlerDescription(handler: NostrEvent): string | undefined;
/** Returns the web link template for a handler and type */
export declare function getHandlerLinkTemplate(handler: NostrEvent, platform?: HandlerLinkPlatform, type?: HandlerLinkType): string | undefined;
/** Returns a link for a Profile Pointer */
export declare function createHandlerProfileLink(handler: NostrEvent, pointer: ProfilePointer, platform?: HandlerLinkPlatform): string | undefined;
/** Returns a link for an Event Pointer */
export declare function createHandlerEventLink(handler: NostrEvent, pointer: EventPointer, platform?: HandlerLinkPlatform): string | undefined;
/** Returns a link for an Address Pointer */
export declare function createHandlerAddressLink(handler: NostrEvent, pointer: AddressPointer, platform?: HandlerLinkPlatform): string | undefined;
/** Creates a handler link for a pointer and optionally fallsback to a web link */
export declare function createHandlerLink(handler: NostrEvent, pointer: AddressPointer | EventPointer | ProfilePointer, platform?: HandlerLinkPlatform, webFallback?: boolean): string | undefined;
