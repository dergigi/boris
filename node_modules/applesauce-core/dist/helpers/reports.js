import { isETag, isPTag } from "./tags.js";
import { getOrComputeCachedValue } from "./cache.js";
export const ParsedReportSymbol = Symbol("parsed-report");
export var ReportReason;
(function (ReportReason) {
    ReportReason["nudity"] = "nudity";
    ReportReason["malware"] = "malware";
    ReportReason["profanity"] = "profanity";
    ReportReason["illegal"] = "illegal";
    ReportReason["spam"] = "spam";
    ReportReason["impersonation"] = "impersonation";
    ReportReason["other"] = "other";
})(ReportReason || (ReportReason = {}));
/** Reads a report event as either a user or event report */
export function getReported(report) {
    return getOrComputeCachedValue(report, ParsedReportSymbol, () => {
        const p = report.tags.find(isPTag);
        if (!p)
            throw new Error("Report missing p tag");
        const comment = report.content ? report.content.trim() : undefined;
        const e = report.tags.find(isETag);
        // Event report
        if (e) {
            const blobs = report.tags.filter((t) => t[0] === "x" && t[1]).map((t) => t[1]);
            return {
                type: "event",
                event: report,
                comment,
                id: e[1],
                pubkey: p[1],
                reason: e[2],
                blobs,
            };
        }
        // User report
        return { type: "user", event: report, comment, pubkey: p[1], reason: p[2] };
    });
}
