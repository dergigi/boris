import { getTagValue } from "./event-tags.js";
/** Gets an "emoji" tag that matches an emoji code */
export function getEmojiTag(tags, code) {
    code = code.replace(/^:|:$/g, "").toLowerCase();
    return (Array.isArray(tags) ? tags : tags.tags).find((t) => t[0] === "emoji" && t.length >= 3 && t[1].toLowerCase() === code);
}
/** Gets an emoji for a shortcode from an array of tags or event */
export function getEmojiFromTags(event, code) {
    const tag = getEmojiTag(event, code);
    if (!tag)
        return undefined;
    return {
        shortcode: tag[1],
        url: tag[2],
    };
}
/** Returns the name of a NIP-30 emoji pack */
export function getPackName(pack) {
    return getTagValue(pack, "title") || getTagValue(pack, "d");
}
/** Returns an array of emojis from a NIP-30 emoji pack */
export function getEmojis(pack) {
    return pack.tags
        .filter((t) => t[0] === "emoji" && t[1] && t[2])
        .map((t) => ({ shortcode: t[1], url: t[2] }));
}
/** Returns the custom emoji for a reaction event */
export function getReactionEmoji(event) {
    // Trim and strip colons
    const shortcode = /^:+(.+?):+$/g.exec(event.content.trim().toLowerCase())?.[1];
    if (!shortcode)
        return undefined;
    return getEmojiFromTags(event, shortcode);
}
