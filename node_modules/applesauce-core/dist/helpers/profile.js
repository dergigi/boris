import { kinds } from "nostr-tools";
import { npubEncode } from "nostr-tools/nip19";
import { getOrComputeCachedValue } from "./cache.js";
import { safeParse } from "./index.js";
export const ProfileContentSymbol = Symbol.for("profile-content");
export function getProfileContent(event) {
    return getOrComputeCachedValue(event, ProfileContentSymbol, () => {
        const profile = safeParse(event.content);
        if (!profile)
            return undefined;
        // ensure nip05 is a string
        if (profile.nip05 && typeof profile.nip05 !== "string")
            profile.nip05 = String(profile.nip05);
        // add missing protocol to website
        if (profile.website && profile.website?.length > 0 && profile.website?.startsWith("http") === false) {
            profile.website = "https://" + profile.website;
        }
        return profile;
    });
}
/** Checks if the content of the kind 0 event is valid JSON */
export function isValidProfile(profile) {
    if (!profile)
        return false;
    if (profile.kind !== kinds.Metadata && profile.kind !== kinds.Handlerinformation)
        return false;
    // Check if the profile content is valid
    if (!getProfileContent(profile))
        return false;
    return true;
}
export function getProfilePicture(metadata, fallback) {
    if (!metadata)
        return fallback;
    // Get the metadata from the nostr event
    if ("pubkey" in metadata && "id" in metadata && "sig" in metadata) {
        if (isValidProfile(metadata))
            metadata = getProfileContent(metadata);
        else
            metadata = undefined;
    }
    // Return the display name or fallback
    return (metadata?.picture || metadata?.image || fallback)?.trim();
}
export function getDisplayName(metadata, fallback) {
    if (!metadata)
        return fallback;
    // Get the metadata from the nostr event
    if ("pubkey" in metadata && "id" in metadata && "sig" in metadata) {
        // Set the fallback to the npub if not set
        if (!fallback) {
            const npub = npubEncode(metadata.pubkey);
            fallback = npub.slice(0, 5 + 4) + "â€¦" + npub.slice(-4);
        }
        // Get the profile content
        if (isValidProfile(metadata))
            metadata = getProfileContent(metadata);
        else
            metadata = undefined;
    }
    // Return the display name or fallback
    return (metadata?.display_name || metadata?.displayName || metadata?.name || fallback)?.trim();
}
