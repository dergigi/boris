import { isHexKey, normalizeToPubkey } from "applesauce-core/helpers";
/** A signer that only implements getPublicKey and throws on ever other method */
export class ReadonlySigner {
    pubkey;
    nip04;
    nip44;
    constructor(pubkey) {
        this.pubkey = pubkey;
        if (!isHexKey(pubkey))
            throw new Error("Invalid public key");
        this.nip04 = {
            encrypt: this.nip04Encrypt.bind(this),
            decrypt: this.nip04Decrypt.bind(this),
        };
        this.nip44 = {
            encrypt: this.nip44Encrypt.bind(this),
            decrypt: this.nip44Decrypt.bind(this),
        };
    }
    async getPublicKey() {
        return this.pubkey;
    }
    async signEvent() {
        throw new Error("Cant sign events with readonly");
    }
    async nip04Encrypt() {
        throw new Error("Cant encrypt with readonly");
    }
    async nip04Decrypt() {
        throw new Error("Cant decrypt with readonly");
    }
    async nip44Encrypt() {
        throw new Error("Cant encrypt with readonly");
    }
    async nip44Decrypt() {
        throw new Error("Cant decrypt with readonly");
    }
    /** Creates a ReadonlySigner from a hex public key or NIP-19 npub */
    static fromPubkey(pubkey) {
        return new ReadonlySigner(normalizeToPubkey(pubkey));
    }
}
