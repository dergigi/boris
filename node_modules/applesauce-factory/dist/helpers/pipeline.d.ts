import { EventOperation, Operation, TagOperation } from "../types.js";
export declare function identity<T>(x: T): T;
/** The core method that creates a pipeline to build an event */
export declare function eventPipe(...operations: (EventOperation | undefined)[]): EventOperation;
/** The core method that creates a pipeline to create or modify an array of tags */
export declare function tagPipe(...operations: (TagOperation | undefined)[]): TagOperation;
/** A pipeline operation that does nothing */
export declare function skip<T>(): (value: T) => T;
/**
 * @param fns - An array of operations to pipe together
 * @param preserve - If set an array of symbols to keep, all other symbols will be removed
 * @internal
 */
export declare function pipeFromAsyncArray<T, R>(fns: Array<Operation<T, R>>, preserve?: symbol[]): Operation<T, R>;
