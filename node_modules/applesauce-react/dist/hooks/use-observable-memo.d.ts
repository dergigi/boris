import { BehaviorSubject, Observable } from "rxjs";
/** A hook that recreates an observable when the dependencies change */
export declare function useObservableMemo<T>(factory: () => BehaviorSubject<T>, deps: any[]): T;
export declare function useObservableMemo<T>(factory: () => Observable<T> | undefined, deps: any[]): T | undefined;
/** A hook that recreates a synchronous observable when the dependencies change */
export declare function useObservableEagerMemo<T>(factory: () => Observable<T>, deps: any[]): T;
export declare function useObservableEagerMemo<T>(factory: () => Observable<T> | undefined, deps: any[]): T | undefined;
